import { MySQLLexer } from 'ts-mysql-parser'

export const ignoredTokens = new Set([
  MySQLLexer.EOF,
  MySQLLexer.EQUAL_OPERATOR,
  MySQLLexer.ASSIGN_OPERATOR,
  MySQLLexer.NULL_SAFE_EQUAL_OPERATOR,
  MySQLLexer.GREATER_OR_EQUAL_OPERATOR,
  MySQLLexer.GREATER_THAN_OPERATOR,
  MySQLLexer.LESS_OR_EQUAL_OPERATOR,
  MySQLLexer.LESS_THAN_OPERATOR,
  MySQLLexer.NOT_EQUAL_OPERATOR,
  MySQLLexer.NOT_EQUAL2_OPERATOR,
  MySQLLexer.PLUS_OPERATOR,
  MySQLLexer.MINUS_OPERATOR,
  MySQLLexer.MULT_OPERATOR,
  MySQLLexer.DIV_OPERATOR,
  MySQLLexer.MOD_OPERATOR,
  MySQLLexer.LOGICAL_NOT_OPERATOR,
  MySQLLexer.BITWISE_NOT_OPERATOR,
  MySQLLexer.SHIFT_LEFT_OPERATOR,
  MySQLLexer.SHIFT_RIGHT_OPERATOR,
  MySQLLexer.LOGICAL_AND_OPERATOR,
  MySQLLexer.BITWISE_AND_OPERATOR,
  MySQLLexer.BITWISE_XOR_OPERATOR,
  MySQLLexer.LOGICAL_OR_OPERATOR,
  MySQLLexer.BITWISE_OR_OPERATOR,
  MySQLLexer.DOT_SYMBOL,
  MySQLLexer.COMMA_SYMBOL,
  MySQLLexer.SEMICOLON_SYMBOL,
  MySQLLexer.COLON_SYMBOL,
  MySQLLexer.OPEN_PAR_SYMBOL,
  MySQLLexer.CLOSE_PAR_SYMBOL,
  MySQLLexer.OPEN_CURLY_SYMBOL,
  MySQLLexer.CLOSE_CURLY_SYMBOL,
  MySQLLexer.UNDERLINE_SYMBOL,
  MySQLLexer.AT_SIGN_SYMBOL,
  MySQLLexer.AT_AT_SIGN_SYMBOL,
  MySQLLexer.NULL2_SYMBOL,
  MySQLLexer.PARAM_MARKER,
  MySQLLexer.CONCAT_PIPES_SYMBOL,
  MySQLLexer.AT_TEXT_SUFFIX,
  MySQLLexer.BACK_TICK_QUOTED_ID,
  MySQLLexer.SINGLE_QUOTED_TEXT,
  MySQLLexer.DOUBLE_QUOTED_TEXT,
  MySQLLexer.NCHAR_TEXT,
  MySQLLexer.UNDERSCORE_CHARSET,
  MySQLLexer.IDENTIFIER,
  MySQLLexer.INT_NUMBER,
  MySQLLexer.LONG_NUMBER,
  MySQLLexer.ULONGLONG_NUMBER,
  MySQLLexer.DECIMAL_NUMBER,
  MySQLLexer.BIN_NUMBER,
  MySQLLexer.HEX_NUMBER
])
